{"version":3,"file":"player.js","sourceRoot":"","sources":["player.ts"],"names":[],"mappings":"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","sourcesContent":["import {CanvasObject} from \"./canvas-object\";\nimport {CanvasController} from \"./canvas-controller\";\nimport {Point} from \"./point\";\n\nexport class Player extends CanvasObject {\n    get loc(): number {\n        return this._loc;\n    }\n\n    set loc(value: number) {\n        this._loc = value;\n    }\n  public selected: boolean = false;\n  private _radius: number;\n  private _name: string;\n  private dragging: boolean = false;\n  private dragOffset: Point = new Point(0, 0);\n  private _loc: number;\n\n  constructor(controller: CanvasController, name: string = \"\", x: number = 0, y: number = 0, radius: number = 5) {\n    super(controller, x, y);\n    this._radius = radius;\n    this._name = name;\n    this._loc = 10;\n  }\n  public drawMe(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    const canvasPos = this.controller.CoordinateToPixel(this.position);\n    ctx.arc(canvasPos.x, canvasPos.y, this._radius, 0, 2 * Math.PI);\n    ctx.fillStyle = 'red';\n    if (this.selected) {\n      ctx.fillStyle = 'white';\n    }\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n    ctx.restore();\n    if (this._name !== \"\") {\n      ctx.beginPath();\n      ctx.fillStyle = 'blue';\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      let draw_x = canvasPos.x;\n      let draw_y = canvasPos.y + this._radius;\n      const metrics = ctx.measureText(this._name);\n      const text_left = draw_x - metrics.width/2;\n      const text_right = draw_x + metrics.width/2;\n      if (text_left < 0) {\n        draw_x = 0;\n        ctx.textAlign = \"left\";\n      } else if (text_right > this.controller.canvasWidth) {\n        draw_x = this.controller.canvasWidth;\n        ctx.textAlign = \"right\";\n      }\n      if (draw_y > this.controller.canvasHeight) {\n        ctx.textBaseline = 'bottom';\n        draw_y = canvasPos.y - 2*this._radius;\n      }\n      if (draw_y < 0) {\n        draw_y = 0;\n        ctx.textBaseline = \"top\";\n      }\n      ctx.fillText(this._name, draw_x, draw_y + this._radius - 4);\n    }\n  }\n  public get name(): string {\n    return this._name;\n  }\n\n  public set name(value: string) {\n    this._name = value;\n  }\n  public tick() {\n    super.tick();\n    if (this.dragging) {\n      const p = this.controller.mousePos.add(this.dragOffset);\n      this.position = p.clamp(new Point(0,0), new Point(1,1));\n    }\n  }\n  public mouseClick(mousePos: Point): boolean {\n    const tp = this.controller.PixelToCoordinate(new Point(5, 5));\n    if (mousePos.x >= this.x-tp.x && mousePos.x <= this.x+tp.x &&\n        mousePos.y >= this.y-tp.y && mousePos.y <= this.y+tp.y) {\n      this.dragging = true;\n      this.dragOffset = this.position.subtract(mousePos);\n      this.controller.selectedObject = this;\n\n      return true;\n    }\n  }\n\n  public mouseRelease(mousePos: Point): boolean {\n    this.dragging = false;\n    return false;\n  }\n}\n"]}