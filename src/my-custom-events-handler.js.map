{"version":3,"file":"my-custom-events-handler.js","sourceRoot":"","sources":["my-custom-events-handler.ts"],"names":[],"mappings":";;;IAKA;QAEE,YAAa,MAAgC,EAAE,GAAW;YACxD,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC5B,CAAC;QAED,IAAW,MAAM;YACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;QAED,IAAW,GAAG;YACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;QAEM,SAAS;YACd,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;QAClE,CAAC;QACM,MAAM,CAAC,KAA4B;YACxC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QAChD,CAAC;KACF;IACD,mBAAyB,GAA0B;QACjD,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAED;QAIE;YACE,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACjD,CAAC;QAEM,SAAS,CAAC,MAA2B,EAAE,GAAW;YACvD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QACzD,CAAC;QAEM,YAAY,CAAC,MAA2B,EAAE,GAAW;YAC1D,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QACnE,CAAC;QAEM,MAAM,CAAC,MAAS,EAAE,GAAM;YAC7B,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;gBACpB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAChC,CAAC;QACH,CAAC;QAEM,KAAK;YACV,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC;KACF;IA3BD,gDA2BC;IAED;QACE,IAAI,aAAa;YACf,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;QACD,IAAI,SAAS;YACX,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;QACD,IAAI,SAAS;YACX,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;QAMD,YAAY,aAAqB,EAAE,QAAa,EAAE,QAAa;YAC7D,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC7B,CAAC;KACF;IApBD,4DAoBC","sourcesContent":["\nimport * as hashSet  from 'hash-set';\n\ntype function_type<T, U> = (obj: T, arg: U) => void;\n\nclass FunctionPointer<T, U> {\n  private data: [(obj: T, arg: U) => void, object];\n  constructor (method: (obj: T, arg: U) => void, obj: object) {\n    this.data = [method, obj];\n  }\n\n  public get method(): (obj: T, arg: U) => void {\n    return this.data[0];\n  }\n\n  public get obj(): object {\n    return this.data[1];\n  }\n\n  public keyMethod(): string {\n    return [this.method.name, this.obj.constructor.name].toString();\n  }\n  public equals(other: FunctionPointer<T, U>): boolean {\n    return this.method.name === other.method.name;\n  }\n}\nfunction keyMethod<T, U>(obj: FunctionPointer<T, U>): string {\n  return obj.keyMethod();\n}\n\nexport class CustomEventHandler<T, U> {\n  private invoke_list: hashSet.HashSet;\n  private FunctionPointSet: typeof hashSet;\n\n  constructor() {\n    this.FunctionPointSet = hashSet(keyMethod);\n    this.invoke_list = new this.FunctionPointSet();\n  }\n\n  public AddMethod(method: function_type<T, U>, obj: object) {\n    this.invoke_list.add(new FunctionPointer(method, obj));\n  }\n\n  public RemoveMethod(method: function_type<T, U>, obj: object): boolean {\n    return this.invoke_list.delete(new FunctionPointer(method, obj));\n  }\n\n  public Invoke(caller: T, arg: U) {\n    for (let fo of this.invoke_list) {\n      const f = fo.method;\n      (f.bind(fo.obj))(caller, arg);\n    }\n  }\n\n  public Clear() {\n    this.invoke_list.clear();\n  }\n}\n\nexport class PropertyChangedEventArgs {\n  get property_name(): string {\n    return this._property_name;\n  }\n  get old_value(): any {\n    return this._old_value;\n  }\n  get new_value(): any {\n    return this._new_value;\n  }\n\n  private _property_name: string;\n  private _old_value: any;\n  private _new_value: any;\n\n  constructor(property_name: string, oldValue: any, newValue: any) {\n    this._property_name = property_name;\n    this._old_value = oldValue;\n    this._new_value = newValue;\n  }\n}\n"]}