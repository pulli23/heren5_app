{"version":3,"file":"canvas-drawer.js","sourceRoot":"","sources":["../../../src/canvas-drawer.ts"],"names":[],"mappings":"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","sourcesContent":["import {CanvasObject} from './canvas-object';\nexport class CanvasDrawer {\n    get draw_rate(): number {\n        return this._draw_rate;\n    }\n\n    set draw_rate(value: number) {\n        this._draw_rate = value;\n        window.clearInterval(this.drawer);\n        this.drawer = window.setInterval(this.requestDraw.bind(this), 1000/this.draw_rate);\n    }\n    private _canvas: HTMLCanvasElement;\n    private _background: HTMLImageElement;\n    private _last_draw: number;\n    private _draw_rate: number;\n    private _background_color: string;\n    private readonly _object_list: Array<CanvasObject>;\n    private drawer: number;\n\n    constructor(draw_rate: number, object_list_reference: Array<CanvasObject>) {\n        this._background = null;\n        this._last_draw = 0;\n        this._draw_rate = draw_rate;\n        this._object_list = object_list_reference;\n        this.drawer = window.setInterval(this.requestDraw.bind(this), 1000/this.draw_rate);\n    }\n\n    get background(): HTMLImageElement {\n        return this._background;\n    }\n    set background(value: HTMLImageElement) {\n        this._background = value;\n    }\n    get background_color(): string {\n        return this._background_color;\n    }\n\n    set background_color(value: string) {\n        this._background_color = value;\n    }\n    private get canvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n    private set canvas(value: HTMLCanvasElement) {\n        this._canvas = value;\n    }\n    public setCanvas(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n\n    public requestDraw() {\n        const t = Date.now() - this._last_draw;\n        if (t >= 1000/this.draw_rate) {\n            this._last_draw = Date.now();\n            this.draw();\n        }\n    }\n\n    public draw() {\n        if (!this.canvas) {return;}\n        const ctx: CanvasRenderingContext2D = this.canvas.getContext('2d');\n        this.drawBackground(ctx);\n        this.drawObjects(ctx);\n    }\n\n    private drawObjects(ctx: CanvasRenderingContext2D) {\n        for (let elem of this._object_list) {\n            if (elem.visible) {\n                elem.drawMe(ctx);\n            }\n        }\n    }\n\n    private drawBackground(ctx: CanvasRenderingContext2D) {\n        const w = this.canvas.width;\n        const h = this.canvas.height;\n        if (this._background) {\n            ctx.drawImage(this._background, 0, 0, w, h);\n        } else if (this._background_color) {\n            ctx.fillStyle = this._background_color;\n            ctx.fillRect(0,0,w,h);\n        } else {\n            ctx.clearRect(0, 0, w, h);\n        }\n    }\n\n}\n"]}